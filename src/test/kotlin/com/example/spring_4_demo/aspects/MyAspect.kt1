package com.example.spring_4_demo.aspects

import lombok.extern.slf4j.Slf4j
import org.aspectj.lang.JoinPoint
import org.aspectj.lang.annotation.After
import org.aspectj.lang.annotation.Aspect
import org.aspectj.lang.annotation.Before
import org.aspectj.lang.annotation.Pointcut
import org.slf4j.LoggerFactory
import org.springframework.stereotype.Component

/**
 * @author akimov
 * created at 04.01.2021 15:39
 */
@Aspect
@Component
@Slf4j
class MyAspect {

    var log = LoggerFactory.getLogger(thisjavaClass)

    @Pointcut("execution(public * Person.*(..))")
    fun callAtPersonPublic() {
    }

    @Before("callAtPersonPublic()")
    fun beforeCallAtMethod1(jp: JoinPoint) {
        log.info("before $jp")
    }

    @After("callAtPersonPublic()")
    fun afterCallAt(jp: JoinPoint) {
        log.info("after $jp")
    }

    @After("execution(public * Person.*(..))")
    fun around() {
        log.info("around...")
    }
}